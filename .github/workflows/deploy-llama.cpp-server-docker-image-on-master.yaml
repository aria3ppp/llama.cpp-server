name: Build and Deploy llama.cpp Server to GHCR (master)
on:
  push:
#     branches: [ master ]
# env:
#   REGISTRY: ghcr.io
#   REPOSITORY_OWNER: ${{ github.repository_owner }}
#   IMAGE_PREFIX: llama.cpp-server
jobs:
  build-and-push-image:
    if: ${{ false }} # disable workflow
    # strategy:
    #   matrix:
    #     include:
    #       - model_quantization: "llama-3.2-1b-instruct-q4_k_m.gguf"
    #         model_quantization_lowercase: "llama-3.2-1b-instruct-q4_k_m.gguf"
    #         model_repo: "hugging-quants/Llama-3.2-1B-Instruct-Q4_K_M-GGUF"
    #       - model_quantization: "llama-3.2-1b-instruct-q8_0.gguf"
    #         model_quantization_lowercase: "llama-3.2-1b-instruct-q8_0.gguf"
    #         model_repo: "hugging-quants/Llama-3.2-1B-Instruct-Q8_0-GGUF"
    #       - model_quantization: "llama-3.2-3b-instruct-q4_k_m.gguf"
    #         model_quantization_lowercase: "llama-3.2-3b-instruct-q4_k_m.gguf"
    #         model_repo: "hugging-quants/Llama-3.2-3B-Instruct-Q4_K_M-GGUF"
    #       - model_quantization: "llama-3.2-3b-instruct-q8_0.gguf"
    #         model_quantization_lowercase: "llama-3.2-3b-instruct-q8_0.gguf"
    #         model_repo: "hugging-quants/Llama-3.2-3B-Instruct-Q8_0-GGUF"
    #       - model_quantization: "Phi-3.5-mini-instruct-Q4_K_L.gguf"
    #         model_quantization_lowercase: "phi-3.5-mini-instruct-q4_k_l.gguf"
    #         model_repo: "bartowski/Phi-3.5-mini-instruct-GGUF"
    #       - model_quantization: "Phi-3.5-mini-instruct-Q8_0.gguf"
    #         model_quantization_lowercase: "phi-3.5-mini-instruct-q8_0.gguf"
    #         model_repo: "bartowski/Phi-3.5-mini-instruct-GGUF"
    #       # Add more combinations as needed
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Get the commit hash
      id: get_hash
      run: echo ::set-output name=COMMIT_HASH::$(git rev-parse HEAD)
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      env:
        IMAGE_NAME: ${{ env.IMAGE_PREFIX }}-${{ matrix.model_quantization_lowercase }}
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}:${{ steps.get_hash.outputs.COMMIT_HASH }}
        build-args: |
          MODEL_QUANTIZATION=${{ matrix.model_quantization }}
